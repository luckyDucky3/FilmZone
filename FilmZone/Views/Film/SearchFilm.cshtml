@using FilmZone.Domain.Models;
@using FilmZone.Domain.Response;
@using System.Text.Json;
@inject FilmZone.Service.Interfaces.IFilmFeedbackService filmFeedbackService
@inject FilmZone.Service.Interfaces.IBestFilmService bestFilmService
@model FilmZone.Domain.ViewModels.FilmViewModel
@{
    float personalRating = 0;
    var type = Model?.Type.GetDisplayName();
    var baseResponse = await filmFeedbackService.GetListOfFeedback(Model.Id);
    IBaseResponse<FilmFeedback> personalRespose = await filmFeedbackService.GetFeedbackByLoginAndFilmName(ViewBag.UserName, Model.Id);
    if (personalRespose.Data?.Value != null)
    {
        personalRating = personalRespose.Data.Value;
    }
    ViewBag.FilmName = Model?.Name;
}
<div class="Content">
    @if(Model != null)
    {
        <div class="ContentFilm">
            <h1>@Model.Name</h1>
            <iframe width="560" height="315" src=@Model.Preview title="@Model.Name" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
        </div>
        <div class="OptionFilm">
            <div class="fa-regular fa-heart" id="heart"></div>
            @{
                var checkBestFilm = await bestFilmService.GetListOfUserFilm(ViewBag.UserName);
                foreach (var f in checkBestFilm.Data)
                {
                    if (f.FilmName == Model.Name)
                    {
                                    <script>
                                        document.getElementById('heart').classList.add('focus');
                                    </script>
                        break;
                    }
                }
            }
            <div class="full-stars">
                <div class="rating-group" id="rating">
                    <!-- по умолчанию 0 -->
                    <input name="fst" value="0" type="radio" disabled checked />

                    <!-- рейтинг 1 -->
                    <label for="fst-1">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path d="M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z" /></svg>
                    </label>
                    <input name="fst" id="fst-1" value="1" type="radio" />

                    <!-- рейтинг 2 -->
                    <label for="fst-2">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path d="M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z" /></svg>
                    </label>
                    <input name="fst" id="fst-2" value="2" type="radio" />

                    <!-- рейтинг 3 -->
                    <label for="fst-3">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path d="M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z" /></svg>
                    </label>
                    <input name="fst" id="fst-3" value="3" type="radio" />

                    <!-- рейтинг 4 -->
                    <label for="fst-4">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path d="M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z" /></svg>
                    </label>
                    <input name="fst" id="fst-4" value="4" type="radio" />

                    <!-- рейтинг 5 -->
                    <label for="fst-5">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path d="M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z" /></svg>
                    </label>
                    <input name="fst" id="fst-5" value="5" type="radio" />
                </div>
            </div>
        </div>
        <div class="InfoAboutFilm">
            <span class="Label">Рейтинг: </span><span class="Value">@if(Model.Rating > 0){ @Model.Rating<span>/5</span>}else{<span>Оцените первым!</span>}</span>
            <span class="Label">Год: </span><span class="Value">@Model.ReleaseFilmDate</span>
            <span class="Label">Режиссер: </span><span class="Value">@Model.Director</span>
            <span class="Label">Жанр: </span><span class="Value">@type</span>
        </div>
    
        <hr>
        <h2>Описание фильма</h2>
        <div class="DescriptionFilm">
            <p style="text-indent: 40px">@Model.Description</p>
            <div class="lists">
                <ul>
                    <li id="price">Платно</li>
                    @{bool flag = false;}
                    @for (int i = 0; i < Model.Links.Count; i++)
                    {
                        @if (@Model.Price[i] == "Платно")
                        {
                            flag = true;
                            <li>
                                <a href="@Model.Links[i]">@Model.Links[i].Split("/")[2]</a>
                                <br />
                                <span>@Model.Advertisement[i]</span>
                            </li>
                        }
                    }
                    @if (!flag)
                    {
                        <li id="none">Информации пока нет :(</li>
                        <li><img src="/gifs/cry-crying-cat.gif" /></li>
                    }
                </ul>
                <ul>
                    <li id="price">Бесплатно</li>
                    @{flag = false;}
                    @for (int i = 0; i < Model.Links.Count; i++)
                    {
                        @if (@Model.Price[i] != "Платно")
                        {
                            flag = true;
                            <li>
                                <a href="@Model.Links[i]">@Model.Links[i].Split("/")[2]</a>
                                <br />
                                <span>@Model.Advertisement[i]</span>
                            </li>
                        }
                    }
                    @if (!flag)
                    {
                        <li id="none">Информации пока нет :(</li>
                        <li><img src="/gifs/cry-crying-cat.gif" /></li>
                    }
                </ul>
            </div>
        </div>
        <hr>
        <h2>Отзывы о фильме</h2>
        @if(baseResponse.Data.Count != 0)
        {
            foreach (var feedback in baseResponse.Data)
            {
                @if(feedback.Text != "")
                {
                    <div class="Reviews">
                        <div class="ReviewName">
                            @feedback.Name
                        </div>
                        <div class="ReviewText">
                            <h3>@feedback.Heading</h3>
                            <p>@feedback.Text</p>
                            @if(feedback.Value > 0)
                            {
                                <div id="Value">@feedback.Value/5</div>
                            }
                            else
                            {
                                <div id="Value">-</div>
                            }
                            @if (feedback.Value <= 3)
                            {
                                <style>
                                    #Value {
                                        border-color: #ff6161;
                                    }
                                </style>
                            }
                            else if(feedback.Value == 4)
                            {
                                <style>
                                    #Value {
                                        border-color: #fca250;
                                    }
                                </style>
                            }
                            else if (feedback.Value == 5)
                            {
                                <style>
                                    #Value {
                                        border-color: #00be00;
                                    }
                                </style>
                            }
                        </div>
                    </div>
                }
            }
        }
        else
        {
            <p>Оставьте отзыв, будьте первыми!</p>
        }
        <div class="Send">
            @if (ViewBag.IsInPrivateArea)
            {
                <form method="post" action="/User/FilmFeedback">
                <input type="text" name="ReviewHeading" placeholder="Заголовок">
                <textarea name="ReviewText" placeholder="Текст..." required></textarea>
                <input type="hidden" name="FilmId" value="@Model.Id" />
                <input type="submit" placeholder="Отправить">
                </form>
            }
            else
            {
                <p>Для того чтобы иметь возможность оставлять отзывы на нашем сайте, нужно зарегистрироваться</p>
            }
        </div>
        <script>
            const heart = document.getElementById('heart');
            heart.addEventListener('click', function (e) {
                e.preventDefault();
                heart.classList.toggle('focus');
                if (heart.classList.contains('focus')) {
                    fetch('/api/api/addFilm', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ name: @Html.Raw(JsonSerializer.Serialize(Model.Name)) }),
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success)
                                console.log('C# метод addFilm успешно вызван');
                            else {
                                console.log('Произошла ошибка при вызове C# addFilm метода');
                                alert("Зарегистрируйтесь на сайте прежде чем добавить в избранное");
                            }
                        })
                        .catch(error => {
                            console.error('Ошибка:', error);
                        });
                }
                else {
                    fetch('/api/api/removeFilm', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ name: @Html.Raw(JsonSerializer.Serialize(Model.Name)) }),
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success)
                                console.log('C# метод removeFilm успешно вызван');
                            else
                                console.log('Произошла ошибка при вызове C# removeFilm метода');
                        })
                        .catch(error => {
                            console.error('Ошибка:', error);
                        });
                }
            });
        </script>
        <script>
            const userRating = @personalRating;
            if (userRating > 0) {
                const ratingInput = document.querySelector(`#rating input[value="${userRating}"]`);
                if (ratingInput) {
                    ratingInput.checked = true;
                    updateStarColors(userRating);
                }
            }
            document.addEventListener('DOMContentLoaded', function () {
                const ratingInputs = document.querySelectorAll('input[name="fst"]');
                ratingInputs.forEach(input => {
                    input.addEventListener('change', function () {
                        if (this.checked) {
                            const rating = this.value;
                            sendRating(rating);
                            console.log('Вызвался sendRating');
                            updateStarColors(rating);
                            console.log('Вызвался updateStarColors');
                        }
                    });
                });
            });

            function updateStarColors(rating) {
                const ratingGroup = document.getElementById('rating');
                const labels = ratingGroup.querySelectorAll('label svg');
                labels.forEach((svg, index) => {
                    if (index < rating) {
                        svg.style.fill = '#f0c280';
                    } else {
                        svg.style.fill = '#ffe7bf';
                    }
                });
            }

            function sendRating(rating) {
                fetch('/api/api/rating', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ rating: parseInt(rating), id: @Html.Raw(JsonSerializer.Serialize(Model.Id)) })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success)
                            console.log('C# изменение рейтинга прошло успешно');
                        else {
                            console.log('Произошла ошибка при изменении рейтинга');
                            alert("Зарегистрируйтесь на сайте прежде чем оценить фильм");
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            }
        </script>
    }
    else
    {
        <div class="Content">
        <h1>@ViewData["Message"]</h1>
        </div>
    }
</div>